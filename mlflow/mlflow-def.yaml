apiVersion: batch/v1
kind: Job
metadata:
  name: create-mlflow-database
  namespace: mlflow
spec:
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
    spec:
      containers:
      - name: create-mlflow-database
        image: public.ecr.aws/atcommons/utils/mysql-db-creator:latest
        env:
        - name: HOST
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: rds_host
        - name: PORT
          value: "3306"
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: rds_username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: rds_password
        - name: DATABASE
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: db_name_mlflow

      restartPolicy: Never
  backoffLimit: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app: mlflow
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: mlflow
          securityContext: {}
          image: "public.ecr.aws/atcommons/mlflow-server:latest"
          imagePullPolicy: Always
          args:
            - --host=0.0.0.0
            - --port=5000
            - --backend-store-uri="mysql://$(rds_username):$(rds_password)@$(rds_host):3306/$(db_name_mlflow)"
            - --default-artifact-root=s3://863518836478-dev-kf13-kubeflow/modeling/experiments
          envFrom:         
          - secretRef:
              name: mlflow-secret
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: mlflow
spec:
  selector:
    app: mlflow
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 5000
