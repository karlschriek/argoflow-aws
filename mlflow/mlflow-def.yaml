apiVersion: batch/v1
kind: Job
metadata:
  name: create-mlflow-database
  namespace: mlflow
spec:
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
    spec:
      containers:
        - name: create-mlflow-database
          image: public.ecr.aws/atcommons/utils/mysql-db-creator:latest
          env:
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: RDS_HOST
            - name: PORT
              value: "3306"
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: RDS_USERNAME
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: RDS_PASSWORD
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: RDS_DB_NAME_MLFLOW

      restartPolicy: Never
  backoffLimit: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app: mlflow
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: mlflow
          securityContext: {}
          image: "public.ecr.aws/atcommons/mlflow-server:latest"
          imagePullPolicy: Always
          args:
            - --host=0.0.0.0
            - --port=5000
            - --backend-store-uri="mysql://$(RDS_USERNAME):$(RDS_PASSWORD)@$(RDS_HOST):3306/$(RDS_DB_NAME_MLFLOW)"
            - --default-artifact-root=s3://$(ARTIFACT_S3_BUCKET)/modeling/experiments
          envFrom:
            - secretRef:
                name: aws-secret
            - configMapRef:
                name: aws-config
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: mlflow
spec:
  selector:
    app: mlflow
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 5000
